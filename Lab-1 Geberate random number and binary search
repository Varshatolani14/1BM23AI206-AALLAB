#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define SIZE 100

int binarySearch(int arr[], int left, int right, int target) {
    while (left <= right) {
        int mid = left + (right - left) / 2;
        if (arr[mid] == target) return mid;
        if (arr[mid] < target) left = mid + 1;
        else right = mid - 1;
    }
    return -1;
}

int main() {
    int arr[SIZE];
    int target;
    srand(time(NULL)); 

    for (int i = 0; i < SIZE; i++) {
        arr[i] = rand() % 100 + 1;
    }

    for (int i = 0; i < SIZE - 1; i++) {
        for (int j = 0; j < SIZE - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }

    printf("Sorted array:\n");
    for (int i = 0; i < SIZE; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    target = rand() % 100 + 1;
    printf("Target: %d\n", target);

    clock_t start, end;
    start = clock();

    int result = binarySearch(arr, 0, SIZE - 1, target);

    end = clock();

    if (result != -1) {
        printf("Number found at index %d\n", result);
    } else {
        printf("Number not found\n");
    }

    double time_taken = ((double)(end - start)) / CLOCKS_PER_SEC;
    printf("Time taken: %f seconds\n", time_taken);

    return 0;
}
