#include <stdio.h>
#include <limits.h>
#include <stdbool.h>

#define V 5

int minKey(int key[], bool mstSet[]) {
    int min = INT_MAX, min_index;
   
    for (int v = 0; v < V; v++) {
        if (mstSet[v] == false && key[v] < min) {
            min = key[v];
            min_index = v;
        }
    }
   
    return min_index;
}

void printMST(int parent[], int graph[V][V]) {
    int tcost = 0;
    printf("Edge \tWeight\n");
    for (int i = 1; i < V; i++) {
        printf("%d - %d \t%d \n", parent[i], i, graph[i][parent[i]]);
        tcost += graph[i][parent[i]];
    }
    printf("Total cost is : %d", tcost);
}


void primMST(int graph[V][V]) {
    int parent[V];      
    int key[V];        
    bool mstSet[V];    
   
   
    for (int i = 0; i < V; i++) {
        key[i] = INT_MAX;
        mstSet[i] = false;
    }
   
   
    key[0] = 0;        
    parent[0] = -1;    
   
   
    for (int count = 0; count < V - 1; count++) {

        int u = minKey(key, mstSet);
       
        mstSet[u] = true;
       
        for (int v = 0; v < V; v++) {
            if (graph[u][v] && mstSet[v] == false && graph[u][v] < key[v]) {
                parent[v] = u;
                key[v] = graph[u][v];
            }
        }
    }
   
    printMST(parent, graph);
   
   
}

 int main() {
   
    int c;
    printf("Enter the number of vertices : ");
    scanf("%d", &c);
    int graph[V][V], i, j;
    printf("\nEnter the corresponding weights : \n");
    for(i = 0; i < c; i++) {
        for(j = 0; j < c; j++)
            scanf("%d", &graph[i][j]);
    }
   
    printf("Prim's Minimum Spanning Tree:\n");
    primMST(graph);
