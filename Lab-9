#include <iostream>
#include <vector>

using namespace std;

void printBoard(const vector<int>& board, int N) {
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            if (board[i] == j) {
                cout << "Q ";
            } else {
                cout << ". ";
            }
        }
        cout << endl;
    }
    cout << endl;
}

bool isSafe(const vector<int>& board, int row, int col, int N) {
    for (int i = 0; i < row; i++) {
        if (board[i] == col || board[i] - i == col - row || board[i] + i == col + row) {
            return false;
        }
    }
    return true;
}

bool solveNQueens(vector<int>& board, int row, int N) {
    if (row == N) {
        printBoard(board, N);
        return true;
    }

    bool result = false;
    for (int col = 0; col < N; col++) {
        if (isSafe(board, row, col, N)) {
            board[row] = col;
            result = solveNQueens(board, row + 1, N) || result;
        }
    }
    return result;
}

void solveNQueens(int N) {
    vector<int> board(N, -1);
    if (!solveNQueens(board, 0, N)) {
        cout << "No solution exists!" << endl;
    }
}

int main() {
    int N;
    cout << "Enter the number of queens: ";
    cin >> N;

    solveNQueens(N);

    return 0;
}
